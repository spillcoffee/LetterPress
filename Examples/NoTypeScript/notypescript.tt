<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension=".debug" #>
<#@ include file="assemblies.t4" #>
<#@ include file="imports.t4" #><#
    string currentDirectory = Directory.GetCurrentDirectory();
    WriteLine("Current Directory: " + currentDirectory);
    Write("Framework Version: ");
    Write(Environment.Version.ToString());
    Write("\n");
#><#
var press = new Press();
press.LoadClassesFromDirectory($@"{currentDirectory}/Examples/Entities");

var deboss = new TypescriptDeboss();
deboss.LoadGeneratedTemplate(
this.Host.ResolvePath($@"{currentDirectory}/Examples/generated.template")
);
deboss.LoadClassTemplate(
  this.Host.ResolvePath($@"{currentDirectory}/Examples/NoTypeScript/ts_class.template")
);
deboss.LoadPropertyTemplate(
  this.Host.ResolvePath($@"{currentDirectory}/Examples/NoTypeScript/ts_property.template")
);

// Add references to classes that are also being generated.
deboss.Classes = press.Classes;

deboss.ImpressInto(
  press.Classes, // Classes to deboss
  $@"{currentDirectory}/Examples/NoTypeScript/Output", // Output of deboss
  (cls) => $"{deboss.Impress(cls, "${ClassName}", true)}.g.ts" // Filename to deboss to
  );
#>


