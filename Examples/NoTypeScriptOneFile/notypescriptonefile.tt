<#@ template debug="true" hostspecific="true" language="C#" #>
<#@ output extension=".debug" #>
<#@ include file="assemblies.t4" #>
<#@ include file="imports.t4" #><#
    string currentDirectory = Directory.GetCurrentDirectory();
    WriteLine("Current Directory: " + currentDirectory);
    Write("Framework Version: ");
    Write(Environment.Version.ToString());
    Write("\n");
#><#
var press = new Press();
press.LoadClasses($@"{currentDirectory}/Examples/Entities");

// Configure deboss
var tsDeboss = new TypescriptDeboss();
tsDeboss.ReferenceClasses = press.Classes;
press.Deboss = tsDeboss;

// Configure templates by specifying a IForme instance.
var forme = new FileLoadForme();
forme.LoadGeneratedTemplate(
  this.Host.ResolvePath($@"{currentDirectory}/Examples/generated.template")
);
forme.LoadClassTemplate(
  this.Host.ResolvePath($@"{currentDirectory}/Examples/NoTypeScriptOneFile/ts_class.template")
);
forme.LoadPropertyTemplate(
  this.Host.ResolvePath($@"{currentDirectory}/Examples/NoTypeScriptOneFile/ts_property.template")
);
forme.LoadAllTemplate(
  this.Host.ResolvePath($@"{currentDirectory}/Examples/NoTypeScriptOneFile/ts_all.template")
);

// Specify a file to used for placement of generated classes, in this case
// used to provide any needed imports for typescript.
forme.LoadAllTemplate(
  this.Host.ResolvePath($@"{currentDirectory}/Examples/NoTypeScriptOneFile/ts_all.template")
);

press.Forme = forme;

press.InkToFile(
  $@"{currentDirectory}/Examples/NoTypeScriptOneFile/Output", // Output of deboss
  "ALL.g.ts" // Place all files into one file,
  );
#>


